package tenprojecteulersolutionsinjava;
import java.util.Scanner;


/*Fibonacci Numbers Problem 2
from https://projecteuler.net/problem=2

The problem is as follows: 
Even Fibonacci numbers
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the SUM of the even-valued terms.
4 million = 4, 000, 000


*/

public class ImprovedFibonacci
{

	
	public static void main(String[]args)
	{
		Scanner input = new Scanner(System.in);
		
		
		//Find and display the Fibonacci number
		System.out.println("Pick an index");
		int index = input.nextInt();
		
		System.out.println("Fibonacci at " + index + " is " + fib(index));
	} // close main()
	
	public static long fib(long n)
	{
		long f0 = 0;
		long f1 = 1;
		long f2 = 1;
		
		if (n == 0)
		{
			return f0;
		}
		else if (n == 1)
		{
			return f1;
		}
		else if (n == 2)
		{
			return f2;
		}
		for(int i = 3; i <= n; i++)
		{
		f0 = f1;
		f1 = f2;
		f2 = f0 + f1;
		}
		return f2;
	} // close fib()
} // CLOSE CLASS
